<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>attrace.connector.protocol.core.OperationRootActionCall</code>
 */
class OperationRootActionCall extends \Google\Protobuf\Internal\Message
{
    /**
     * The address of the root
     *
     * Generated from protobuf field <code>bytes RootAddress = 1;</code>
     */
    protected $RootAddress = '';
    /**
     * Agreement which will process this.
     *
     * Generated from protobuf field <code>bytes Agreement = 2;</code>
     */
    protected $Agreement = '';
    /**
     * Source account generating the action
     *
     * Generated from protobuf field <code>bytes SourceAccount = 3;</code>
     */
    protected $SourceAccount = '';
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.ActionCall ActionCall = 4;</code>
     */
    protected $ActionCall = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $RootAddress
     *           The address of the root
     *     @type string $Agreement
     *           Agreement which will process this.
     *     @type string $SourceAccount
     *           Source account generating the action
     *     @type \Attrace\Connector\Protocol\Core\ActionCall $ActionCall
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * The address of the root
     *
     * Generated from protobuf field <code>bytes RootAddress = 1;</code>
     * @return string
     */
    public function getRootAddress()
    {
        return $this->RootAddress;
    }

    /**
     * The address of the root
     *
     * Generated from protobuf field <code>bytes RootAddress = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRootAddress($var)
    {
        GPBUtil::checkString($var, False);
        $this->RootAddress = $var;

        return $this;
    }

    /**
     * Agreement which will process this.
     *
     * Generated from protobuf field <code>bytes Agreement = 2;</code>
     * @return string
     */
    public function getAgreement()
    {
        return $this->Agreement;
    }

    /**
     * Agreement which will process this.
     *
     * Generated from protobuf field <code>bytes Agreement = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAgreement($var)
    {
        GPBUtil::checkString($var, False);
        $this->Agreement = $var;

        return $this;
    }

    /**
     * Source account generating the action
     *
     * Generated from protobuf field <code>bytes SourceAccount = 3;</code>
     * @return string
     */
    public function getSourceAccount()
    {
        return $this->SourceAccount;
    }

    /**
     * Source account generating the action
     *
     * Generated from protobuf field <code>bytes SourceAccount = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceAccount($var)
    {
        GPBUtil::checkString($var, False);
        $this->SourceAccount = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.ActionCall ActionCall = 4;</code>
     * @return \Attrace\Connector\Protocol\Core\ActionCall
     */
    public function getActionCall()
    {
        return isset($this->ActionCall) ? $this->ActionCall : null;
    }

    public function hasActionCall()
    {
        return isset($this->ActionCall);
    }

    public function clearActionCall()
    {
        unset($this->ActionCall);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.ActionCall ActionCall = 4;</code>
     * @param \Attrace\Connector\Protocol\Core\ActionCall $var
     * @return $this
     */
    public function setActionCall($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\ActionCall::class);
        $this->ActionCall = $var;

        return $this;
    }

}

