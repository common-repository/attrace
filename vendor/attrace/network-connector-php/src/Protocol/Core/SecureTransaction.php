<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The SecureTransaction is to be shared between parties directly over an encrypted channel.
 *
 * Generated from protobuf message <code>attrace.connector.protocol.core.SecureTransaction</code>
 */
class SecureTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     * The original transaction, which is also broadcasted to the public chain.
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.core.Transaction Transaction = 1;</code>
     */
    protected $Transaction = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Attrace\Connector\Protocol\Core\Transaction $Transaction
     *           The original transaction, which is also broadcasted to the public chain.
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * The original transaction, which is also broadcasted to the public chain.
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.core.Transaction Transaction = 1;</code>
     * @return \Attrace\Connector\Protocol\Core\Transaction
     */
    public function getTransaction()
    {
        return isset($this->Transaction) ? $this->Transaction : null;
    }

    public function hasTransaction()
    {
        return isset($this->Transaction);
    }

    public function clearTransaction()
    {
        unset($this->Transaction);
    }

    /**
     * The original transaction, which is also broadcasted to the public chain.
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.core.Transaction Transaction = 1;</code>
     * @param \Attrace\Connector\Protocol\Core\Transaction $var
     * @return $this
     */
    public function setTransaction($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\Transaction::class);
        $this->Transaction = $var;

        return $this;
    }

}

