<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * OperationClaimRootCompensation would sent ATTR from SourceAddress to Facilitator to receive fiat money
 * NOTE: Get value need to claim from rootState.Root.Compensation. This would ONLY work when this op in the same tx that have compensation
 *
 * Generated from protobuf message <code>attrace.connector.protocol.core.OperationClaimRootCompensation</code>
 */
class OperationClaimRootCompensation extends \Google\Protobuf\Internal\Message
{
    /**
     * Root address which makes the compensation
     *
     * Generated from protobuf field <code>bytes Root = 1;</code>
     */
    protected $Root = '';
    /**
     * SourceAddress owner of the compensation
     *
     * Generated from protobuf field <code>bytes SourceAddress = 2;</code>
     */
    protected $SourceAddress = '';
    /**
     * Address of the facilitator would handle the compensation
     *
     * Generated from protobuf field <code>bytes Facilitator = 3;</code>
     */
    protected $Facilitator = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Root
     *           Root address which makes the compensation
     *     @type string $SourceAddress
     *           SourceAddress owner of the compensation
     *     @type string $Facilitator
     *           Address of the facilitator would handle the compensation
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Root address which makes the compensation
     *
     * Generated from protobuf field <code>bytes Root = 1;</code>
     * @return string
     */
    public function getRoot()
    {
        return $this->Root;
    }

    /**
     * Root address which makes the compensation
     *
     * Generated from protobuf field <code>bytes Root = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRoot($var)
    {
        GPBUtil::checkString($var, False);
        $this->Root = $var;

        return $this;
    }

    /**
     * SourceAddress owner of the compensation
     *
     * Generated from protobuf field <code>bytes SourceAddress = 2;</code>
     * @return string
     */
    public function getSourceAddress()
    {
        return $this->SourceAddress;
    }

    /**
     * SourceAddress owner of the compensation
     *
     * Generated from protobuf field <code>bytes SourceAddress = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceAddress($var)
    {
        GPBUtil::checkString($var, False);
        $this->SourceAddress = $var;

        return $this;
    }

    /**
     * Address of the facilitator would handle the compensation
     *
     * Generated from protobuf field <code>bytes Facilitator = 3;</code>
     * @return string
     */
    public function getFacilitator()
    {
        return $this->Facilitator;
    }

    /**
     * Address of the facilitator would handle the compensation
     *
     * Generated from protobuf field <code>bytes Facilitator = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setFacilitator($var)
    {
        GPBUtil::checkString($var, False);
        $this->Facilitator = $var;

        return $this;
    }

}

