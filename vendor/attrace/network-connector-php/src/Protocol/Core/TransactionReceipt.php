<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Execution result of a Transaction
 *
 * Generated from protobuf message <code>attrace.connector.protocol.core.TransactionReceipt</code>
 */
class TransactionReceipt extends \Google\Protobuf\Internal\Message
{
    /**
     * Execution status of the transaction. False = failed. True = success.
     *
     * Generated from protobuf field <code>bool Status = 1;</code>
     */
    protected $Status = false;
    /**
     * When null, it means the fee owner is Transaction.SourceAddress, this is inferred by default.
     * Optional to override the fee owner at transaction level.
     * Setting this to Transaction.SourceAddress will make the block invalid.
     *
     * Generated from protobuf field <code>bytes FeeOwner = 2;</code>
     */
    protected $FeeOwner = '';
    /**
     * Allows to override specific behavior at operation level.
     *
     * Generated from protobuf field <code>repeated .attrace.connector.protocol.core.OperationReceipt OperationReceipts = 3;</code>
     */
    private $OperationReceipts;
    /**
     * Which operation caused the error
     * The first operation which fails, stops processing
     *
     * Generated from protobuf field <code>uint32 ErrorOperation = 4;</code>
     */
    protected $ErrorOperation = 0;
    /**
     * Error code, can be set to an error string indicating problem. Eg: INSUFFICIENT_TOKEN, CONTRACT_MISSING, ...
     *
     * Generated from protobuf field <code>string ErrorCode = 5;</code>
     */
    protected $ErrorCode = '';
    /**
     * Optional error message and variable dump. Can be left empty.
     *
     * Generated from protobuf field <code>string ErrorMessage = 6;</code>
     */
    protected $ErrorMessage = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $Status
     *           Execution status of the transaction. False = failed. True = success.
     *     @type string $FeeOwner
     *           When null, it means the fee owner is Transaction.SourceAddress, this is inferred by default.
     *           Optional to override the fee owner at transaction level.
     *           Setting this to Transaction.SourceAddress will make the block invalid.
     *     @type \Attrace\Connector\Protocol\Core\OperationReceipt[]|\Google\Protobuf\Internal\RepeatedField $OperationReceipts
     *           Allows to override specific behavior at operation level.
     *     @type int $ErrorOperation
     *           Which operation caused the error
     *           The first operation which fails, stops processing
     *     @type string $ErrorCode
     *           Error code, can be set to an error string indicating problem. Eg: INSUFFICIENT_TOKEN, CONTRACT_MISSING, ...
     *     @type string $ErrorMessage
     *           Optional error message and variable dump. Can be left empty.
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Execution status of the transaction. False = failed. True = success.
     *
     * Generated from protobuf field <code>bool Status = 1;</code>
     * @return bool
     */
    public function getStatus()
    {
        return $this->Status;
    }

    /**
     * Execution status of the transaction. False = failed. True = success.
     *
     * Generated from protobuf field <code>bool Status = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkBool($var);
        $this->Status = $var;

        return $this;
    }

    /**
     * When null, it means the fee owner is Transaction.SourceAddress, this is inferred by default.
     * Optional to override the fee owner at transaction level.
     * Setting this to Transaction.SourceAddress will make the block invalid.
     *
     * Generated from protobuf field <code>bytes FeeOwner = 2;</code>
     * @return string
     */
    public function getFeeOwner()
    {
        return $this->FeeOwner;
    }

    /**
     * When null, it means the fee owner is Transaction.SourceAddress, this is inferred by default.
     * Optional to override the fee owner at transaction level.
     * Setting this to Transaction.SourceAddress will make the block invalid.
     *
     * Generated from protobuf field <code>bytes FeeOwner = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFeeOwner($var)
    {
        GPBUtil::checkString($var, False);
        $this->FeeOwner = $var;

        return $this;
    }

    /**
     * Allows to override specific behavior at operation level.
     *
     * Generated from protobuf field <code>repeated .attrace.connector.protocol.core.OperationReceipt OperationReceipts = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getOperationReceipts()
    {
        return $this->OperationReceipts;
    }

    /**
     * Allows to override specific behavior at operation level.
     *
     * Generated from protobuf field <code>repeated .attrace.connector.protocol.core.OperationReceipt OperationReceipts = 3;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationReceipt[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setOperationReceipts($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Attrace\Connector\Protocol\Core\OperationReceipt::class);
        $this->OperationReceipts = $arr;

        return $this;
    }

    /**
     * Which operation caused the error
     * The first operation which fails, stops processing
     *
     * Generated from protobuf field <code>uint32 ErrorOperation = 4;</code>
     * @return int
     */
    public function getErrorOperation()
    {
        return $this->ErrorOperation;
    }

    /**
     * Which operation caused the error
     * The first operation which fails, stops processing
     *
     * Generated from protobuf field <code>uint32 ErrorOperation = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setErrorOperation($var)
    {
        GPBUtil::checkUint32($var);
        $this->ErrorOperation = $var;

        return $this;
    }

    /**
     * Error code, can be set to an error string indicating problem. Eg: INSUFFICIENT_TOKEN, CONTRACT_MISSING, ...
     *
     * Generated from protobuf field <code>string ErrorCode = 5;</code>
     * @return string
     */
    public function getErrorCode()
    {
        return $this->ErrorCode;
    }

    /**
     * Error code, can be set to an error string indicating problem. Eg: INSUFFICIENT_TOKEN, CONTRACT_MISSING, ...
     *
     * Generated from protobuf field <code>string ErrorCode = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setErrorCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->ErrorCode = $var;

        return $this;
    }

    /**
     * Optional error message and variable dump. Can be left empty.
     *
     * Generated from protobuf field <code>string ErrorMessage = 6;</code>
     * @return string
     */
    public function getErrorMessage()
    {
        return $this->ErrorMessage;
    }

    /**
     * Optional error message and variable dump. Can be left empty.
     *
     * Generated from protobuf field <code>string ErrorMessage = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setErrorMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->ErrorMessage = $var;

        return $this;
    }

}

