<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core\OperationModifyAccountAccess;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * User has to be owner of the objects referenced for access: account or agreement
 *
 * Generated from protobuf message <code>attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope</code>
 */
class AccessScope extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes Delegatee = 1;</code>
     */
    protected $Delegatee = '';
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.TXScope TXPermission = 2;</code>
     */
    protected $TXPermission = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.BlockScope BlockPermission = 3;</code>
     */
    protected $BlockPermission = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.OperationScope OperationPermission = 4;</code>
     */
    protected $OperationPermission = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Delegatee
     *     @type \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\TXScope $TXPermission
     *     @type \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\BlockScope $BlockPermission
     *     @type \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\OperationScope $OperationPermission
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes Delegatee = 1;</code>
     * @return string
     */
    public function getDelegatee()
    {
        return $this->Delegatee;
    }

    /**
     * Generated from protobuf field <code>bytes Delegatee = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDelegatee($var)
    {
        GPBUtil::checkString($var, False);
        $this->Delegatee = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.TXScope TXPermission = 2;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\TXScope
     */
    public function getTXPermission()
    {
        return isset($this->TXPermission) ? $this->TXPermission : null;
    }

    public function hasTXPermission()
    {
        return isset($this->TXPermission);
    }

    public function clearTXPermission()
    {
        unset($this->TXPermission);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.TXScope TXPermission = 2;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\TXScope $var
     * @return $this
     */
    public function setTXPermission($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\TXScope::class);
        $this->TXPermission = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.BlockScope BlockPermission = 3;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\BlockScope
     */
    public function getBlockPermission()
    {
        return isset($this->BlockPermission) ? $this->BlockPermission : null;
    }

    public function hasBlockPermission()
    {
        return isset($this->BlockPermission);
    }

    public function clearBlockPermission()
    {
        unset($this->BlockPermission);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.BlockScope BlockPermission = 3;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\BlockScope $var
     * @return $this
     */
    public function setBlockPermission($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\BlockScope::class);
        $this->BlockPermission = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.OperationScope OperationPermission = 4;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\OperationScope
     */
    public function getOperationPermission()
    {
        return isset($this->OperationPermission) ? $this->OperationPermission : null;
    }

    public function hasOperationPermission()
    {
        return isset($this->OperationPermission);
    }

    public function clearOperationPermission()
    {
        unset($this->OperationPermission);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess.AccessScope.OperationScope OperationPermission = 4;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\OperationScope $var
     * @return $this
     */
    public function setOperationPermission($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess\AccessScope\OperationScope::class);
        $this->OperationPermission = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(AccessScope::class, \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess_AccessScope::class);

