<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * This will create an agreement on the network.
 *
 * Generated from protobuf message <code>attrace.connector.protocol.core.OperationCreateAgreement</code>
 */
class OperationCreateAgreement extends \Google\Protobuf\Internal\Message
{
    /**
     * All involved parties, who all need to approve the contract to get it started.
     *
     * Generated from protobuf field <code>repeated bytes Parties = 1;</code>
     */
    private $Parties;
    /**
     * Agreement contract bytecode verification hash. sha256(compiledWasmCode, hashNonce).
     *
     * Generated from protobuf field <code>bytes ContractHash = 5;</code>
     */
    protected $ContractHash = '';
    /**
     * Byte Code of the contract
     *
     * Generated from protobuf field <code>bytes ContractByteCode = 8;</code>
     */
    protected $ContractByteCode = '';
    /**
     * The amount of hours until unconfirmed agreement will be purged
     *
     * Generated from protobuf field <code>int32 ConfirmationDueInHours = 9;</code>
     */
    protected $ConfirmationDueInHours = 0;
    /**
     * Which contract is used from the contract library
     *
     * Generated from protobuf field <code>string ContractId = 10;</code>
     */
    protected $ContractId = '';
    /**
     * Dynamic initialization arguments for the contract
     * This can hold things like customized commission rules, revsharing rules, pricing rules, product rules, ...
     * The total size of all arguments combined should be below 1KB.
     * TODO: validation on 1Kb
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.contractprotocol.ListMap Arguments = 11;</code>
     */
    protected $Arguments = null;
    /**
     * Currency in which compensations are calculated.
     * 0=NONE | 1 = USD | 2 = EUR | ...
     *
     * Generated from protobuf field <code>uint32 CompensationCurrency = 12;</code>
     */
    protected $CompensationCurrency = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $Parties
     *           All involved parties, who all need to approve the contract to get it started.
     *     @type string $ContractHash
     *           Agreement contract bytecode verification hash. sha256(compiledWasmCode, hashNonce).
     *     @type string $ContractByteCode
     *           Byte Code of the contract
     *     @type int $ConfirmationDueInHours
     *           The amount of hours until unconfirmed agreement will be purged
     *     @type string $ContractId
     *           Which contract is used from the contract library
     *     @type \Attrace\Connector\Protocol\Contractprotocol\ListMap $Arguments
     *           Dynamic initialization arguments for the contract
     *           This can hold things like customized commission rules, revsharing rules, pricing rules, product rules, ...
     *           The total size of all arguments combined should be below 1KB.
     *           TODO: validation on 1Kb
     *     @type int $CompensationCurrency
     *           Currency in which compensations are calculated.
     *           0=NONE | 1 = USD | 2 = EUR | ...
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * All involved parties, who all need to approve the contract to get it started.
     *
     * Generated from protobuf field <code>repeated bytes Parties = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getParties()
    {
        return $this->Parties;
    }

    /**
     * All involved parties, who all need to approve the contract to get it started.
     *
     * Generated from protobuf field <code>repeated bytes Parties = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setParties($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->Parties = $arr;

        return $this;
    }

    /**
     * Agreement contract bytecode verification hash. sha256(compiledWasmCode, hashNonce).
     *
     * Generated from protobuf field <code>bytes ContractHash = 5;</code>
     * @return string
     */
    public function getContractHash()
    {
        return $this->ContractHash;
    }

    /**
     * Agreement contract bytecode verification hash. sha256(compiledWasmCode, hashNonce).
     *
     * Generated from protobuf field <code>bytes ContractHash = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setContractHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->ContractHash = $var;

        return $this;
    }

    /**
     * Byte Code of the contract
     *
     * Generated from protobuf field <code>bytes ContractByteCode = 8;</code>
     * @return string
     */
    public function getContractByteCode()
    {
        return $this->ContractByteCode;
    }

    /**
     * Byte Code of the contract
     *
     * Generated from protobuf field <code>bytes ContractByteCode = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setContractByteCode($var)
    {
        GPBUtil::checkString($var, False);
        $this->ContractByteCode = $var;

        return $this;
    }

    /**
     * The amount of hours until unconfirmed agreement will be purged
     *
     * Generated from protobuf field <code>int32 ConfirmationDueInHours = 9;</code>
     * @return int
     */
    public function getConfirmationDueInHours()
    {
        return $this->ConfirmationDueInHours;
    }

    /**
     * The amount of hours until unconfirmed agreement will be purged
     *
     * Generated from protobuf field <code>int32 ConfirmationDueInHours = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setConfirmationDueInHours($var)
    {
        GPBUtil::checkInt32($var);
        $this->ConfirmationDueInHours = $var;

        return $this;
    }

    /**
     * Which contract is used from the contract library
     *
     * Generated from protobuf field <code>string ContractId = 10;</code>
     * @return string
     */
    public function getContractId()
    {
        return $this->ContractId;
    }

    /**
     * Which contract is used from the contract library
     *
     * Generated from protobuf field <code>string ContractId = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setContractId($var)
    {
        GPBUtil::checkString($var, True);
        $this->ContractId = $var;

        return $this;
    }

    /**
     * Dynamic initialization arguments for the contract
     * This can hold things like customized commission rules, revsharing rules, pricing rules, product rules, ...
     * The total size of all arguments combined should be below 1KB.
     * TODO: validation on 1Kb
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.contractprotocol.ListMap Arguments = 11;</code>
     * @return \Attrace\Connector\Protocol\Contractprotocol\ListMap
     */
    public function getArguments()
    {
        return isset($this->Arguments) ? $this->Arguments : null;
    }

    public function hasArguments()
    {
        return isset($this->Arguments);
    }

    public function clearArguments()
    {
        unset($this->Arguments);
    }

    /**
     * Dynamic initialization arguments for the contract
     * This can hold things like customized commission rules, revsharing rules, pricing rules, product rules, ...
     * The total size of all arguments combined should be below 1KB.
     * TODO: validation on 1Kb
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.contractprotocol.ListMap Arguments = 11;</code>
     * @param \Attrace\Connector\Protocol\Contractprotocol\ListMap $var
     * @return $this
     */
    public function setArguments($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Contractprotocol\ListMap::class);
        $this->Arguments = $var;

        return $this;
    }

    /**
     * Currency in which compensations are calculated.
     * 0=NONE | 1 = USD | 2 = EUR | ...
     *
     * Generated from protobuf field <code>uint32 CompensationCurrency = 12;</code>
     * @return int
     */
    public function getCompensationCurrency()
    {
        return $this->CompensationCurrency;
    }

    /**
     * Currency in which compensations are calculated.
     * 0=NONE | 1 = USD | 2 = EUR | ...
     *
     * Generated from protobuf field <code>uint32 CompensationCurrency = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setCompensationCurrency($var)
    {
        GPBUtil::checkUint32($var);
        $this->CompensationCurrency = $var;

        return $this;
    }

}

