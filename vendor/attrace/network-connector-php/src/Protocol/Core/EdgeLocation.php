<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>attrace.connector.protocol.core.EdgeLocation</code>
 */
class EdgeLocation extends \Google\Protobuf\Internal\Message
{
    /**
     * Latitude indication where this node is running (x 100000)
     *
     * Generated from protobuf field <code>int32 Latitude = 1;</code>
     */
    protected $Latitude = 0;
    /**
     * Longitude indicatio nwhere this node is running (x 100000)
     *
     * Generated from protobuf field <code>int32 Longitude = 2;</code>
     */
    protected $Longitude = 0;
    /**
     * Nearest subdivision within a country (state/province), by distance to center of the subdivision.
     * As ISO3166-2 state or province code. Eg: US-CA, NL-NH, ...
     * See https://en.wikipedia.org/wiki/ISO_3166-2 and click the country.
     *
     * Generated from protobuf field <code>string NearestSubdivision = 4;</code>
     */
    protected $NearestSubdivision = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $Latitude
     *           Latitude indication where this node is running (x 100000)
     *     @type int $Longitude
     *           Longitude indicatio nwhere this node is running (x 100000)
     *     @type string $NearestSubdivision
     *           Nearest subdivision within a country (state/province), by distance to center of the subdivision.
     *           As ISO3166-2 state or province code. Eg: US-CA, NL-NH, ...
     *           See https://en.wikipedia.org/wiki/ISO_3166-2 and click the country.
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Latitude indication where this node is running (x 100000)
     *
     * Generated from protobuf field <code>int32 Latitude = 1;</code>
     * @return int
     */
    public function getLatitude()
    {
        return $this->Latitude;
    }

    /**
     * Latitude indication where this node is running (x 100000)
     *
     * Generated from protobuf field <code>int32 Latitude = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setLatitude($var)
    {
        GPBUtil::checkInt32($var);
        $this->Latitude = $var;

        return $this;
    }

    /**
     * Longitude indicatio nwhere this node is running (x 100000)
     *
     * Generated from protobuf field <code>int32 Longitude = 2;</code>
     * @return int
     */
    public function getLongitude()
    {
        return $this->Longitude;
    }

    /**
     * Longitude indicatio nwhere this node is running (x 100000)
     *
     * Generated from protobuf field <code>int32 Longitude = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setLongitude($var)
    {
        GPBUtil::checkInt32($var);
        $this->Longitude = $var;

        return $this;
    }

    /**
     * Nearest subdivision within a country (state/province), by distance to center of the subdivision.
     * As ISO3166-2 state or province code. Eg: US-CA, NL-NH, ...
     * See https://en.wikipedia.org/wiki/ISO_3166-2 and click the country.
     *
     * Generated from protobuf field <code>string NearestSubdivision = 4;</code>
     * @return string
     */
    public function getNearestSubdivision()
    {
        return $this->NearestSubdivision;
    }

    /**
     * Nearest subdivision within a country (state/province), by distance to center of the subdivision.
     * As ISO3166-2 state or province code. Eg: US-CA, NL-NH, ...
     * See https://en.wikipedia.org/wiki/ISO_3166-2 and click the country.
     *
     * Generated from protobuf field <code>string NearestSubdivision = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setNearestSubdivision($var)
    {
        GPBUtil::checkString($var, True);
        $this->NearestSubdivision = $var;

        return $this;
    }

}

