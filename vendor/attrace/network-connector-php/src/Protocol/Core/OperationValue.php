<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Different operations possible
 *
 * Generated from protobuf message <code>attrace.connector.protocol.core.OperationValue</code>
 */
class OperationValue extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationTransferValue TransferValue = 1;</code>
     */
    protected $TransferValue = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationChangeWitnessCandidacy ChangeWitnessCandidacy = 2;</code>
     */
    protected $ChangeWitnessCandidacy = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationStake Stake = 3;</code>
     */
    protected $Stake = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationUnstake Unstake = 4;</code>
     */
    protected $Unstake = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationCreateAgreement CreateAgreement = 5;</code>
     */
    protected $CreateAgreement = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationConfirmAgreement ConfirmAgreement = 6;</code>
     */
    protected $ConfirmAgreement = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationCreateRoot CreateRoot = 7;</code>
     */
    protected $CreateRoot = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationRootActionCall RootActionCall = 8;</code>
     */
    protected $RootActionCall = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationAssignTokenLease AssignTokenLease = 9;</code>
     */
    protected $AssignTokenLease = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationRevokeTokenLease RevokeTokenLease = 10;</code>
     */
    protected $RevokeTokenLease = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationUpdateAccountTokenRates UpdateAccountTokenRates = 11;</code>
     */
    protected $UpdateAccountTokenRates = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess ModifyAccountAccess = 12;</code>
     */
    protected $ModifyAccountAccess = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.SignedDelegatedOperation SignedDelegatedOperation = 13;</code>
     */
    protected $SignedDelegatedOperation = null;
    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationClaimRootCompensation ClaimRootCompensation = 14;</code>
     */
    protected $ClaimRootCompensation = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Attrace\Connector\Protocol\Core\OperationTransferValue $TransferValue
     *     @type \Attrace\Connector\Protocol\Core\OperationChangeWitnessCandidacy $ChangeWitnessCandidacy
     *     @type \Attrace\Connector\Protocol\Core\OperationStake $Stake
     *     @type \Attrace\Connector\Protocol\Core\OperationUnstake $Unstake
     *     @type \Attrace\Connector\Protocol\Core\OperationCreateAgreement $CreateAgreement
     *     @type \Attrace\Connector\Protocol\Core\OperationConfirmAgreement $ConfirmAgreement
     *     @type \Attrace\Connector\Protocol\Core\OperationCreateRoot $CreateRoot
     *     @type \Attrace\Connector\Protocol\Core\OperationRootActionCall $RootActionCall
     *     @type \Attrace\Connector\Protocol\Core\OperationAssignTokenLease $AssignTokenLease
     *     @type \Attrace\Connector\Protocol\Core\OperationRevokeTokenLease $RevokeTokenLease
     *     @type \Attrace\Connector\Protocol\Core\OperationUpdateAccountTokenRates $UpdateAccountTokenRates
     *     @type \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess $ModifyAccountAccess
     *     @type \Attrace\Connector\Protocol\Core\SignedDelegatedOperation $SignedDelegatedOperation
     *     @type \Attrace\Connector\Protocol\Core\OperationClaimRootCompensation $ClaimRootCompensation
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationTransferValue TransferValue = 1;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationTransferValue
     */
    public function getTransferValue()
    {
        return isset($this->TransferValue) ? $this->TransferValue : null;
    }

    public function hasTransferValue()
    {
        return isset($this->TransferValue);
    }

    public function clearTransferValue()
    {
        unset($this->TransferValue);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationTransferValue TransferValue = 1;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationTransferValue $var
     * @return $this
     */
    public function setTransferValue($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationTransferValue::class);
        $this->TransferValue = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationChangeWitnessCandidacy ChangeWitnessCandidacy = 2;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationChangeWitnessCandidacy
     */
    public function getChangeWitnessCandidacy()
    {
        return isset($this->ChangeWitnessCandidacy) ? $this->ChangeWitnessCandidacy : null;
    }

    public function hasChangeWitnessCandidacy()
    {
        return isset($this->ChangeWitnessCandidacy);
    }

    public function clearChangeWitnessCandidacy()
    {
        unset($this->ChangeWitnessCandidacy);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationChangeWitnessCandidacy ChangeWitnessCandidacy = 2;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationChangeWitnessCandidacy $var
     * @return $this
     */
    public function setChangeWitnessCandidacy($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationChangeWitnessCandidacy::class);
        $this->ChangeWitnessCandidacy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationStake Stake = 3;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationStake
     */
    public function getStake()
    {
        return isset($this->Stake) ? $this->Stake : null;
    }

    public function hasStake()
    {
        return isset($this->Stake);
    }

    public function clearStake()
    {
        unset($this->Stake);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationStake Stake = 3;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationStake $var
     * @return $this
     */
    public function setStake($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationStake::class);
        $this->Stake = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationUnstake Unstake = 4;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationUnstake
     */
    public function getUnstake()
    {
        return isset($this->Unstake) ? $this->Unstake : null;
    }

    public function hasUnstake()
    {
        return isset($this->Unstake);
    }

    public function clearUnstake()
    {
        unset($this->Unstake);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationUnstake Unstake = 4;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationUnstake $var
     * @return $this
     */
    public function setUnstake($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationUnstake::class);
        $this->Unstake = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationCreateAgreement CreateAgreement = 5;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationCreateAgreement
     */
    public function getCreateAgreement()
    {
        return isset($this->CreateAgreement) ? $this->CreateAgreement : null;
    }

    public function hasCreateAgreement()
    {
        return isset($this->CreateAgreement);
    }

    public function clearCreateAgreement()
    {
        unset($this->CreateAgreement);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationCreateAgreement CreateAgreement = 5;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationCreateAgreement $var
     * @return $this
     */
    public function setCreateAgreement($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationCreateAgreement::class);
        $this->CreateAgreement = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationConfirmAgreement ConfirmAgreement = 6;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationConfirmAgreement
     */
    public function getConfirmAgreement()
    {
        return isset($this->ConfirmAgreement) ? $this->ConfirmAgreement : null;
    }

    public function hasConfirmAgreement()
    {
        return isset($this->ConfirmAgreement);
    }

    public function clearConfirmAgreement()
    {
        unset($this->ConfirmAgreement);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationConfirmAgreement ConfirmAgreement = 6;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationConfirmAgreement $var
     * @return $this
     */
    public function setConfirmAgreement($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationConfirmAgreement::class);
        $this->ConfirmAgreement = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationCreateRoot CreateRoot = 7;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationCreateRoot
     */
    public function getCreateRoot()
    {
        return isset($this->CreateRoot) ? $this->CreateRoot : null;
    }

    public function hasCreateRoot()
    {
        return isset($this->CreateRoot);
    }

    public function clearCreateRoot()
    {
        unset($this->CreateRoot);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationCreateRoot CreateRoot = 7;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationCreateRoot $var
     * @return $this
     */
    public function setCreateRoot($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationCreateRoot::class);
        $this->CreateRoot = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationRootActionCall RootActionCall = 8;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationRootActionCall
     */
    public function getRootActionCall()
    {
        return isset($this->RootActionCall) ? $this->RootActionCall : null;
    }

    public function hasRootActionCall()
    {
        return isset($this->RootActionCall);
    }

    public function clearRootActionCall()
    {
        unset($this->RootActionCall);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationRootActionCall RootActionCall = 8;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationRootActionCall $var
     * @return $this
     */
    public function setRootActionCall($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationRootActionCall::class);
        $this->RootActionCall = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationAssignTokenLease AssignTokenLease = 9;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationAssignTokenLease
     */
    public function getAssignTokenLease()
    {
        return isset($this->AssignTokenLease) ? $this->AssignTokenLease : null;
    }

    public function hasAssignTokenLease()
    {
        return isset($this->AssignTokenLease);
    }

    public function clearAssignTokenLease()
    {
        unset($this->AssignTokenLease);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationAssignTokenLease AssignTokenLease = 9;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationAssignTokenLease $var
     * @return $this
     */
    public function setAssignTokenLease($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationAssignTokenLease::class);
        $this->AssignTokenLease = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationRevokeTokenLease RevokeTokenLease = 10;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationRevokeTokenLease
     */
    public function getRevokeTokenLease()
    {
        return isset($this->RevokeTokenLease) ? $this->RevokeTokenLease : null;
    }

    public function hasRevokeTokenLease()
    {
        return isset($this->RevokeTokenLease);
    }

    public function clearRevokeTokenLease()
    {
        unset($this->RevokeTokenLease);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationRevokeTokenLease RevokeTokenLease = 10;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationRevokeTokenLease $var
     * @return $this
     */
    public function setRevokeTokenLease($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationRevokeTokenLease::class);
        $this->RevokeTokenLease = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationUpdateAccountTokenRates UpdateAccountTokenRates = 11;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationUpdateAccountTokenRates
     */
    public function getUpdateAccountTokenRates()
    {
        return isset($this->UpdateAccountTokenRates) ? $this->UpdateAccountTokenRates : null;
    }

    public function hasUpdateAccountTokenRates()
    {
        return isset($this->UpdateAccountTokenRates);
    }

    public function clearUpdateAccountTokenRates()
    {
        unset($this->UpdateAccountTokenRates);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationUpdateAccountTokenRates UpdateAccountTokenRates = 11;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationUpdateAccountTokenRates $var
     * @return $this
     */
    public function setUpdateAccountTokenRates($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationUpdateAccountTokenRates::class);
        $this->UpdateAccountTokenRates = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess ModifyAccountAccess = 12;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess
     */
    public function getModifyAccountAccess()
    {
        return isset($this->ModifyAccountAccess) ? $this->ModifyAccountAccess : null;
    }

    public function hasModifyAccountAccess()
    {
        return isset($this->ModifyAccountAccess);
    }

    public function clearModifyAccountAccess()
    {
        unset($this->ModifyAccountAccess);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationModifyAccountAccess ModifyAccountAccess = 12;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess $var
     * @return $this
     */
    public function setModifyAccountAccess($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationModifyAccountAccess::class);
        $this->ModifyAccountAccess = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.SignedDelegatedOperation SignedDelegatedOperation = 13;</code>
     * @return \Attrace\Connector\Protocol\Core\SignedDelegatedOperation
     */
    public function getSignedDelegatedOperation()
    {
        return isset($this->SignedDelegatedOperation) ? $this->SignedDelegatedOperation : null;
    }

    public function hasSignedDelegatedOperation()
    {
        return isset($this->SignedDelegatedOperation);
    }

    public function clearSignedDelegatedOperation()
    {
        unset($this->SignedDelegatedOperation);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.SignedDelegatedOperation SignedDelegatedOperation = 13;</code>
     * @param \Attrace\Connector\Protocol\Core\SignedDelegatedOperation $var
     * @return $this
     */
    public function setSignedDelegatedOperation($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\SignedDelegatedOperation::class);
        $this->SignedDelegatedOperation = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationClaimRootCompensation ClaimRootCompensation = 14;</code>
     * @return \Attrace\Connector\Protocol\Core\OperationClaimRootCompensation
     */
    public function getClaimRootCompensation()
    {
        return isset($this->ClaimRootCompensation) ? $this->ClaimRootCompensation : null;
    }

    public function hasClaimRootCompensation()
    {
        return isset($this->ClaimRootCompensation);
    }

    public function clearClaimRootCompensation()
    {
        unset($this->ClaimRootCompensation);
    }

    /**
     * Generated from protobuf field <code>.attrace.connector.protocol.core.OperationClaimRootCompensation ClaimRootCompensation = 14;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationClaimRootCompensation $var
     * @return $this
     */
    public function setClaimRootCompensation($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Core\OperationClaimRootCompensation::class);
        $this->ClaimRootCompensation = $var;

        return $this;
    }

}

