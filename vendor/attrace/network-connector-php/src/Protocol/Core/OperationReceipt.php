<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

namespace Attrace\Connector\Protocol\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>attrace.connector.protocol.core.OperationReceipt</code>
 */
class OperationReceipt extends \Google\Protobuf\Internal\Message
{
    /**
     * Amount of fees in ATTR consumed by processing this operation.
     *
     * Generated from protobuf field <code>bytes Fees = 1;</code>
     */
    protected $Fees = '';
    /**
     * Optional field to indicate alternative fee owners.
     * Setting this to Transaction.SourceAddress (when no TransactionReceipt.FeeOwner is configured) or the TransactionReceipt.FeeOwner will make the block invalid.
     *
     * Generated from protobuf field <code>bytes FeeOwner = 2;</code>
     */
    protected $FeeOwner = '';
    /**
     * Compensations generated by executing this operation
     *
     * Generated from protobuf field <code>repeated .attrace.connector.protocol.core.OperationCompensation Compensations = 3;</code>
     */
    private $Compensations;
    /**
     * State changes done during exeuction of this operation.
     * If a value is nil, the value was removed.
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.contractprotocol.ListMap StateDeltas = 4;</code>
     */
    protected $StateDeltas = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Fees
     *           Amount of fees in ATTR consumed by processing this operation.
     *     @type string $FeeOwner
     *           Optional field to indicate alternative fee owners.
     *           Setting this to Transaction.SourceAddress (when no TransactionReceipt.FeeOwner is configured) or the TransactionReceipt.FeeOwner will make the block invalid.
     *     @type \Attrace\Connector\Protocol\Core\OperationCompensation[]|\Google\Protobuf\Internal\RepeatedField $Compensations
     *           Compensations generated by executing this operation
     *     @type \Attrace\Connector\Protocol\Contractprotocol\ListMap $StateDeltas
     *           State changes done during exeuction of this operation.
     *           If a value is nil, the value was removed.
     * }
     */
    public function __construct($data = NULL) {
        \Attrace\Connector\Protocol\GPBMetadata\Protocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Amount of fees in ATTR consumed by processing this operation.
     *
     * Generated from protobuf field <code>bytes Fees = 1;</code>
     * @return string
     */
    public function getFees()
    {
        return $this->Fees;
    }

    /**
     * Amount of fees in ATTR consumed by processing this operation.
     *
     * Generated from protobuf field <code>bytes Fees = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFees($var)
    {
        GPBUtil::checkString($var, False);
        $this->Fees = $var;

        return $this;
    }

    /**
     * Optional field to indicate alternative fee owners.
     * Setting this to Transaction.SourceAddress (when no TransactionReceipt.FeeOwner is configured) or the TransactionReceipt.FeeOwner will make the block invalid.
     *
     * Generated from protobuf field <code>bytes FeeOwner = 2;</code>
     * @return string
     */
    public function getFeeOwner()
    {
        return $this->FeeOwner;
    }

    /**
     * Optional field to indicate alternative fee owners.
     * Setting this to Transaction.SourceAddress (when no TransactionReceipt.FeeOwner is configured) or the TransactionReceipt.FeeOwner will make the block invalid.
     *
     * Generated from protobuf field <code>bytes FeeOwner = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFeeOwner($var)
    {
        GPBUtil::checkString($var, False);
        $this->FeeOwner = $var;

        return $this;
    }

    /**
     * Compensations generated by executing this operation
     *
     * Generated from protobuf field <code>repeated .attrace.connector.protocol.core.OperationCompensation Compensations = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCompensations()
    {
        return $this->Compensations;
    }

    /**
     * Compensations generated by executing this operation
     *
     * Generated from protobuf field <code>repeated .attrace.connector.protocol.core.OperationCompensation Compensations = 3;</code>
     * @param \Attrace\Connector\Protocol\Core\OperationCompensation[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCompensations($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Attrace\Connector\Protocol\Core\OperationCompensation::class);
        $this->Compensations = $arr;

        return $this;
    }

    /**
     * State changes done during exeuction of this operation.
     * If a value is nil, the value was removed.
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.contractprotocol.ListMap StateDeltas = 4;</code>
     * @return \Attrace\Connector\Protocol\Contractprotocol\ListMap
     */
    public function getStateDeltas()
    {
        return isset($this->StateDeltas) ? $this->StateDeltas : null;
    }

    public function hasStateDeltas()
    {
        return isset($this->StateDeltas);
    }

    public function clearStateDeltas()
    {
        unset($this->StateDeltas);
    }

    /**
     * State changes done during exeuction of this operation.
     * If a value is nil, the value was removed.
     *
     * Generated from protobuf field <code>.attrace.connector.protocol.contractprotocol.ListMap StateDeltas = 4;</code>
     * @param \Attrace\Connector\Protocol\Contractprotocol\ListMap $var
     * @return $this
     */
    public function setStateDeltas($var)
    {
        GPBUtil::checkMessage($var, \Attrace\Connector\Protocol\Contractprotocol\ListMap::class);
        $this->StateDeltas = $var;

        return $this;
    }

}

